<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0520.1026                               -->
<workbook original-version='18.1' source-build='2025.1.2 (20251.25.0520.1026)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='Dashboard_17514257690940' path='/workbooks' revision='1.4' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (expected_wins)' inline='true' name='federated.18cnp6m0j6wqk117yhpqi0hlh6ap' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='expected_wins' name='excel-direct.06nyvl416qfita16j3sye0io90x9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/rpwju/OneDrive/Desktop/Substack/CFB Clutchness Factor/expected_wins.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.06nyvl416qfita16j3sye0io90x9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D135:no:A1:D135:0' header='yes' outcome='6'>
            <column datatype='string' name='team' ordinal='0' />
            <column datatype='real' name='expected_wins' ordinal='1' />
            <column datatype='integer' name='total_wins' ordinal='2' />
            <column datatype='real' name='win_diff' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D69:no:A1:D69:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[team]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>team</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_0B6FBFEEA8434CAF82F0E0C148C58BD1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>expected_wins</remote-name>
            <remote-type>5</remote-type>
            <local-name>[expected_wins]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>expected_wins</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_0B6FBFEEA8434CAF82F0E0C148C58BD1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_wins</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_wins]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_wins</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_0B6FBFEEA8434CAF82F0E0C148C58BD1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_diff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[win_diff]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>win_diff</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_0B6FBFEEA8434CAF82F0E0C148C58BD1]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[usr:Calculation_1749929957197103104:qk:5]&quot;' value='Rank' />
        </aliases>
      </column>
      <column caption='Rank' datatype='integer' name='[Calculation_1749929957197103104]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([win_diff]), &apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Top and Bottom Filter' datatype='string' name='[Calculation_1749929957197373441]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF RANK(SUM([win_diff]), &apos;desc&apos;) &lt;= [Parameters].[Parameter 1]&#13;&#10;THEN &apos;Show&apos;&#13;&#10;ELSE &apos;Hide&apos;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_0B6FBFEEA8434CAF82F0E0C148C58BD1]' role='measure' type='quantitative' />
      <column caption='Expected Wins' datatype='real' name='[expected_wins]' role='measure' type='quantitative' />
      <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
      <column caption='Total Wins' datatype='integer' name='[total_wins]' role='measure' type='quantitative' />
      <column caption='Win Diff' datatype='real' name='[win_diff]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1749929957197103104]' derivation='User' name='[usr:Calculation_1749929957197103104:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[team]' ordering-type='Field' />
      </column-instance>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/rpwju/OneDrive/Desktop/Substack/CFB Clutchness Factor/Sheet1 (expected_wins).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/03/2025 03:22:15 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sheet1 (expected_wins)' increment-value='%null%' refresh-type='create' rows-inserted='68' timestamp-start='2025-07-03 03:22:14.261' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>team</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>68</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Sheet1_0B6FBFEEA8434CAF82F0E0C148C58BD1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>expected_wins</remote-name>
              <remote-type>5</remote-type>
              <local-name>[expected_wins]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>expected_wins</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>68</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_0B6FBFEEA8434CAF82F0E0C148C58BD1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_wins</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_wins]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_wins</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_0B6FBFEEA8434CAF82F0E0C148C58BD1]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>win_diff</remote-name>
              <remote-type>5</remote-type>
              <local-name>[win_diff]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>win_diff</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>68</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_0B6FBFEEA8434CAF82F0E0C148C58BD1]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_0B6FBFEEA8434CAF82F0E0C148C58BD1'>
            <properties context=''>
              <relation connection='excel-direct.06nyvl416qfita16j3sye0io90x9' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D135:no:A1:D135:0' header='yes' outcome='6'>
                  <column datatype='string' name='team' ordinal='0' />
                  <column datatype='real' name='expected_wins' ordinal='1' />
                  <column datatype='integer' name='total_wins' ordinal='2' />
                  <column datatype='real' name='win_diff' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Top 25 Clutchest Teams</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (expected_wins)' name='federated.18cnp6m0j6wqk117yhpqi0hlh6ap' />
          </datasources>
          <datasource-dependencies datasource='federated.18cnp6m0j6wqk117yhpqi0hlh6ap'>
            <column caption='Expected Wins' datatype='real' name='[expected_wins]' role='measure' type='quantitative' />
            <column-instance column='[team]' derivation='None' name='[none:team:nk]' pivot='key' type='nominal' />
            <column-instance column='[expected_wins]' derivation='Sum' name='[sum:expected_wins:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_wins]' derivation='Sum' name='[sum:total_wins:qk]' pivot='key' type='quantitative' />
            <column-instance column='[win_diff]' derivation='Sum' name='[sum:win_diff:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column caption='Total Wins' datatype='integer' name='[total_wins]' role='measure' type='quantitative' />
            <column caption='Win Diff' datatype='real' name='[win_diff]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[none:team:nk]'>
            <groupfilter count='25' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([win_diff])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[none:team:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[sum:win_diff:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[none:team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='21' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[sum:total_wins:qk]' />
              <tooltip column='[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[sum:expected_wins:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Team:&#9;</run>
                <run bold='true'><![CDATA[<[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[none:team:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Win Diff:&#9;</run>
                <run bold='true'><![CDATA[<[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[sum:win_diff:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Total Wins:&#9;</run>
                <run bold='true'><![CDATA[<[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[sum:total_wins:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Expected Wins:&#9;</run>
                <run bold='true'><![CDATA[<[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[sum:expected_wins:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[sum:win_diff:qk]</rows>
        <cols>[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[none:team:nk]</cols>
      </table>
      <simple-id uuid='{4C96EFCB-456C-421A-A86D-61264EA362BD}' />
    </worksheet>
    <worksheet name='Sheet 1 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Bottom 25 Clutchest Teams</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (expected_wins)' name='federated.18cnp6m0j6wqk117yhpqi0hlh6ap' />
          </datasources>
          <datasource-dependencies datasource='federated.18cnp6m0j6wqk117yhpqi0hlh6ap'>
            <column caption='Expected Wins' datatype='real' name='[expected_wins]' role='measure' type='quantitative' />
            <column-instance column='[team]' derivation='None' name='[none:team:nk]' pivot='key' type='nominal' />
            <column-instance column='[expected_wins]' derivation='Sum' name='[sum:expected_wins:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_wins]' derivation='Sum' name='[sum:total_wins:qk]' pivot='key' type='quantitative' />
            <column-instance column='[win_diff]' derivation='Sum' name='[sum:win_diff:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column caption='Total Wins' datatype='integer' name='[total_wins]' role='measure' type='quantitative' />
            <column caption='Win Diff' datatype='real' name='[win_diff]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[none:team:nk]'>
            <groupfilter count='25' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([win_diff])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[none:team:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[sum:win_diff:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[none:team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='21' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[sum:total_wins:qk]' />
              <tooltip column='[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[sum:expected_wins:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Team:&#9;</run>
                <run bold='true'><![CDATA[<[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[none:team:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Win Diff:&#9;</run>
                <run bold='true'><![CDATA[<[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[sum:win_diff:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Total Wins:&#9;</run>
                <run bold='true'><![CDATA[<[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[sum:total_wins:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Expected Wins:&#9;</run>
                <run bold='true'><![CDATA[<[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[sum:expected_wins:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#b6992d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[sum:win_diff:qk]</rows>
        <cols>[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[none:team:nk]</cols>
      </table>
      <simple-id uuid='{EDD6ECAA-20DE-4C64-ABCE-A3E04ADF8100}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Full List</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (expected_wins)' name='federated.18cnp6m0j6wqk117yhpqi0hlh6ap' />
          </datasources>
          <datasource-dependencies datasource='federated.18cnp6m0j6wqk117yhpqi0hlh6ap'>
            <column caption='Rank' datatype='integer' name='[Calculation_1749929957197103104]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([win_diff]), &apos;desc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Expected Wins' datatype='real' name='[expected_wins]' role='measure' type='quantitative' />
            <column-instance column='[team]' derivation='None' name='[none:team:nk]' pivot='key' type='nominal' />
            <column-instance column='[expected_wins]' derivation='Sum' name='[sum:expected_wins:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_wins]' derivation='Sum' name='[sum:total_wins:qk]' pivot='key' type='quantitative' />
            <column-instance column='[win_diff]' derivation='Sum' name='[sum:win_diff:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column caption='Total Wins' datatype='integer' name='[total_wins]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1749929957197103104]' derivation='User' name='[usr:Calculation_1749929957197103104:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[team]' ordering-type='Field' />
            </column-instance>
            <column caption='Win Diff' datatype='real' name='[win_diff]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[usr:Calculation_1749929957197103104:qk:5]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[sum:win_diff:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[usr:Calculation_1749929957197103104:qk:5]&quot;</bucket>
              <bucket>&quot;[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[sum:win_diff:qk]&quot;</bucket>
              <bucket>&quot;[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[sum:total_wins:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[none:team:nk]'>
            <groupfilter function='level-members' level='[none:team:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
          </filter>
          <alphabetic-sort column='[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[none:team:nk]' direction='ASC' />
          <slices>
            <column>[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[:Measure Names]</column>
            <column>[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[none:team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[none:team:nk]' value='21' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[sum:total_wins:qk]' />
              <tooltip column='[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[sum:expected_wins:qk]' />
              <tooltip column='[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[sum:win_diff:qk]' />
              <text column='[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#757575'>Team:&#9;</run>
                <run bold='true'><![CDATA[<[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[none:team:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Total Wins:&#9;</run>
                <run bold='true'><![CDATA[<[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[sum:total_wins:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#757575'>Expected Wins:&#9;</run>
                <run bold='true'><![CDATA[<[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[sum:expected_wins:qk]>]]></run>
                <run>&#10;Win Diff: </run>
                <run bold='true'><![CDATA[              <[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[sum:win_diff:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[none:team:nk]</rows>
        <cols>[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{DE778A7A-7B47-478C-AF19-80A7B5EDB337}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='11' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='7' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='49000' id='3' name='Sheet 1' w='69799' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='5' name='Sheet 1 (2)' w='69799' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98000' id='6' name='Sheet 3' w='28601' x='70599' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='29' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='28' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Sheet 1' w='69799' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='6' is-fixed='true' name='Sheet 3' w='28601' x='70599' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Sheet 1 (2)' w='69799' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EC65D2A0-22D1-4F0F-905C-95CD930779F2}' />
    </dashboard>
  </dashboards>
  <windows show-side-pane='false' source-height='30'>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 1 (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{FE89912F-F09C-4E12-9BB2-4B524AB6F0D5}' />
    </window>
    <window class='worksheet' hidden='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[none:team:nk]</field>
            <field>[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[usr:Calculation_1749929957197373441:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{52E8E604-2F38-4B0B-91F4-FE64F5D7FC1F}' />
    </window>
    <window class='worksheet' hidden='true' name='Sheet 1 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[none:team:nk]</field>
            <field>[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[usr:Calculation_1749929957197373441:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1A07492D-237C-40BB-80E8-84FA918D5AD5}' />
    </window>
    <window class='worksheet' hidden='true' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[federated.18cnp6m0j6wqk117yhpqi0hlh6ap].[none:team:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{89732BA8-979D-46F9-8F68-1E166BF00FDD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
